import { AppConfigError } from '@app-config/core';
import { logger } from '@app-config/logging';
import prompts from 'prompts';
export async function promptUser(options) {
    const { named } = await prompts({ ...options, name: 'named' });
    return named;
}
export async function promptUserWithRetry(options, tryAnswer, retries = 3) {
    for (let retry = 0; retry < retries; retry += 1) {
        const answer = await promptUser(options);
        const check = await tryAnswer(answer);
        if (check === true) {
            return;
        }
        logger.error(check.toString());
    }
    return Promise.reject(new AppConfigError(`Prompt failed after ${retries} retries`));
}
export async function consumeStdin() {
    return new Promise((resolve, reject) => {
        const buffers = [];
        process.stdin.on('data', (data) => buffers.push(data));
        process.stdin.on('error', reject);
        process.stdin.on('end', () => resolve(Buffer.concat(buffers).toString('utf8')));
    });
}
//# sourceMappingURL=prompts.js.map